from os import listdir
from os.path import isfile, join

in_dir = "/Users/karthik/hpc_downloads/2018.04.18"
out_dir = "/Users/karthik/hpc_downloads/test"
bed = "/Users/karthik/Documents/code/ivar/data/ZKV_primers.bed"

# File name format - ZI26_a_R1.fastq.gz
lst = listdir(in_dir)
lst.sort()
files = [f for f in lst  if isfile(join(in_dir, f)) and ".fastq.gz" in f]

SAMPLES = []
for i in files:
    SAMPLES.append(i.split("_")[0])
SAMPLES = list(set(SAMPLES))

REPS=["a","b"]

rule all:
    input:
        expand("{out_dir}/reports/{sample}_report.pdf", out_dir = out_dir, sample = SAMPLES),
        expand("{out_dir}/reports/{sample}_variants_by_amplicon.png", out_dir = out_dir, sample = SAMPLES),
        expand("{out_dir}/reports/{sample}_variants_by_amplicon_hist.png", out_dir = out_dir, sample = SAMPLES)

rule filter_variants:
    input:
        expand("{out_dir}/variants/{{sample}}{rep}.filtered.tsv {b}".split(), out_dir=out_dir, rep=REPS, b = bed)
    output:
        "{out_dir}/reports/{sample}_report.pdf",
        "{out_dir}/reports/{sample}_variants_by_amplicon.png",
        "{out_dir}/reports/{sample}_variants_by_amplicon_hist.png"
    shell:
        "mkdir -p $(dirname {output})/ &&"
        "/Users/karthik/Documents/code/ivar/ivar.sh filtervariants -p {wildcards.out_dir}/reports/{wildcards.sample} -f 1 {input}"

rule call_variants_post_removal:
    input:
        "{out_dir}/filtered/{sample}{rep}.filtered.sorted.bam"
    output:
        "{out_dir}/variants/{sample}{rep}.filtered.tsv"
    shell:
        "mkdir -p $(dirname {output})/ &&"
        "~/Documents/code/ivar/ivar.sh callvariants -r ~/Documents/code/ivar/data/db/ZIKV_PRV.fasta -p {wildcards.out_dir}/variants/{wildcards.sample}{wildcards.rep}.filtered -i {input}"

rule remove_reads:
    input:
        "{out_dir}/trimmed/{sample}{rep}.trimmed.sorted.bam",
        "{out_dir}/{sample}{rep}_masked_primer_indices.txt"
    output:
        "{out_dir}/filtered/{sample}{rep}.filtered.sorted.bam"
    shell:
        "mkdir -p $(dirname {output})/ &&"
        "primers=$(cat {input[1]}) &&"
        "~/Documents/code/ivar/ivar.sh removereads -i {input[0]} -p {wildcards.out_dir}/filtered/{wildcards.sample}{wildcards.rep} $primers"

rule get_masked:
    input:
        expand("{{out_dir}}/variants/{{sample}}{rep}.tsv {b}".split(), rep=REPS, b = bed)
    output:
        expand("{{out_dir}}/{{sample}}{rep}_masked_primer_indices.txt", rep=REPS)
    shell:
        "~/Documents/code/ivar/ivar.sh getmasked -f 1 -p {wildcards.out_dir}/ {input}"

rule call_variants:
    input:
        "{out_dir}/trimmed/{sample}.trimmed.sorted.bam"
    output:
        "{out_dir}/variants/{sample}.tsv"
    shell:
        "mkdir -p $(dirname {output})/ &&"
        "~/Documents/code/ivar/ivar.sh callvariants -r ~/Documents/code/ivar/data/db/ZIKV_PRV.fasta -p {wildcards.out_dir}/variants/{wildcards.sample} -i {input}"

rule trim_primer_quality:
    input:
        "{out_dir}/aligned/{sample}.sorted.bam",
        "{b}".format(b = bed)
    output:
        "{out_dir}/trimmed/{sample}.trimmed.sorted.bam"
    shell:
        "mkdir -p {wildcards.out_dir}/trimmed/ && "
        "~/Documents/code/ivar/ivar.sh trim -b {input[1]} -p {wildcards.out_dir}/trimmed/{wildcards.sample} -i {input[0]}"

rule align_reads:
    input:
        "{in_dir}".format(in_dir = in_dir)+"/{sample}_R1.fastq.gz",
        "{in_dir}".format(in_dir = in_dir)+"/{sample}_R2.fastq.gz",
        "{ref}".format(ref = ref)
    output:
        "{out_dir}".format(out_dir = out_dir)+"/aligned/{sample}.bam",
        "{out_dir}".format(out_dir = out_dir)+"/aligned/{sample}.sorted.bam"
    shell:
        "mkdir -p $(dirname {output})/ &&"
        "bwa mem {ref} {input[0]} {input[1]} | samtools view -F 4 -Sb -o {output[0]} && "
        "samtools sort -o {output[1]} {output[0]} && "
        "samtools index {output[1]}"
