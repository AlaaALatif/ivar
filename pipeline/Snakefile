from os import listdir
from os.path import isfile, join

in_dir = "/Users/karthik/hpc_downloads/2018.06.26"
out_dir = "/Users/karthik/hpc_downloads/test"
bed = "/Users/karthik/Documents/code/ivar/data/ZKV_primers.bed"
ref="/Users/karthik/Documents/code/ivar/data/db/ZIKV_PRV.fasta"

# File name format - ZI26a_R1.fastq.gz
lst = listdir(in_dir)
lst.sort()
files = [f for f in lst  if isfile(join(in_dir, f)) and ".fastq.gz" in f]

SAMPLES = []
for i in files:
    SAMPLES.append(i.split("_")[0])
SAMPLES = list(set(SAMPLES))

REPS=["a","b"]

rule all:
    input:
        expand("{out_dir}/masked_variants/{sample}.masked.filtered.tsv", out_dir = out_dir, sample = SAMPLES)

rule filter_variants:
    input:
        expand("{out_dir}/masked_variants/{{sample}}_{rep}.masked.tsv", out_dir=out_dir, rep=REPS)
    output:
        "{out_dir}/masked_variants/{sample}.masked.filtered.tsv"
    shell:
        "mkdir -p $(dirname {output})/ &&"
        "ivar filtervariants -p {wildcards.out_dir}/variants/{wildcards.sample}.masked.filtered {input}"

rule call_variants_post_removal:
    input:
        "{out_dir}/masked/{sample}_{rep}.masked.sorted.bam",
        "{ref}".format(ref=ref)
    output:
        "{out_dir}/masked_variants/{sample}_{rep}.masked.tsv"
    shell:
        "mkdir -p $(dirname {output})/ &&"
        "samtools mpileup -A -d 300000 --reference {input[1]} -Q 0 -F 0 {input[0]} | ivar variants -p {wildcards.out_dir}/masked_variants/{wildcards.sample}_{wildcards.rep}.masked -t 0.03"

rule remove_reads:
    input:
        "{out_dir}/trimmed/{sample}_{rep}.trimmed.sorted.bam",
        "{out_dir}/{sample}_masked_primer_indices.txt"
    output:
        "{out_dir}/masked/{sample}_{rep}.masked.sorted.bam"
    shell:
        "mkdir -p $(dirname {output})/ &&"
        "primers=$(cat {input[1]}) &&"
        "ivar removereads -i {input[0]} -p {wildcards.out_dir}/masked/{wildcards.sample}{wildcards.rep}.masked $primers && "
        "samtools sort -o {output} {wildcards.out_dir}/masked/{wildcards.sample}{wildcards.rep}.masked.bam && "
        "samtools index {output}"

rule get_masked:
    input:
        "{out_dir}/variants/{sample}.filtered.tsv",
        "{b}".format(b = bed)
    output:
        "{out_dir}/{sample}_masked_primer_indices.txt"
    shell:
        "ivar getmasked -i {input[0]} -b {input[1]} > {output}"

rule filter_variants_before_masking:
    input:
        expand("{{out_dir}}/variants/{{sample}}_{rep}.tsv", rep=REPS)
    output:
        "{out_dir}/variants/{sample}.filtered.tsv"
    shell:
        "mkdir -p $(dirname {output})/ &&"
        "ivar filtervariants -p {wildcards.out_dir}/variants/{wildcards.sample}.filtered {input}"

rule call_variants:
    input:
        "{out_dir}/trimmed/{sample}.trimmed.sorted.bam",
        "{ref}".format(ref = ref)
    output:
        "{out_dir}/variants/{sample}.tsv"
    shell:
        "mkdir -p $(dirname {output})/ &&"
        "samtools mpileup -A -d 300000 --reference {input[1]} -Q 0 -F 0 {input[0]} | ivar variants -p {wildcards.out_dir}/variants/{wildcards.sample} -t 0.03"

rule trim_primer_quality:
    input:
        "{out_dir}/aligned/{sample}.sorted.bam",
        "{b}".format(b = bed)
    output:
        "{out_dir}/trimmed/{sample}.trimmed.sorted.bam"
    shell:
        "mkdir -p {wildcards.out_dir}/trimmed/ && "
        "ivar trim -b {input[1]} -p {wildcards.out_dir}/trimmed/{wildcards.sample}.trimmed -i {input[0]} &&"
        "samtools sort -o {output} {wildcards.out_dir}/trimmed/{wildcards.sample}.trimmed.bam &&"
        "samtools index {output}"

rule align_reads:
    input:
        expand("{in_dir}/{{sample}}_R{num}.fastq.gz", in_dir = in_dir, num=[1,2]),
        "{ref}".format(ref = ref)
    output:
        "{out_dir}/aligned/{sample}.sorted.bam"
    shell:
        "mkdir -p $(dirname {output})/ && "
        "bwa mem {ref} {input[0]} {input[1]} | samtools view -F 4 -Sb | samtools sort -o {output} && "
        "samtools index {output}"
